spring.application.name=Springboot_SSO
server.port=9090


# GitHub OAuth2 Configuration
#replace the id and secret with actual id and secret 
githubclient.id=Id 
githubclient.secret=secret

spring.security.oauth2.client.registration.github.client-name=GITHUB Identity Server
spring.security.oauth2.client.registration.github.client-id=${githubclient.id}
spring.security.oauth2.client.registration.github.client-secret=${githubclient.secret}
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:9090/login/oauth2/code/github


#SSL
server.ssl.enabled=true
server.ssl.key-alias=migrate
server.ssl.key-store=classpath:keystore/migrate.p12
server.ssl.key-store-type=PKCS12
server.ssl.key-store-password=123456

# Custom Truststore Configuration
server.ssl.trust-store=classpath:keystore/truststore.jks
server.ssl.trust-store-password=truststor

# Add Java System Properties for Truststore
system.property.javax.net.ssl.trustStore=classpath:keystore/truststore.jks
system.property.javax.net.ssl.trustStorePassword=truststor

# Keycloak Client Registration
spring.security.oauth2.client.registration.keycloak.client-id=LoginWithKeyCloak
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.redirect-uri=https://localhost:9090/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code

# Keycloak Provider Details

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/Springboot_SSO
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/Springboot_SSO/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/Springboot_SSO/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/Springboot_SSO/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username



# WSO2 Application Properties
#provider.host=https://localhost:9443 // or any Ip address
#wso2client.id=id
#wso2client.secret=secret
#provider.host=https://localhost:9443
#wso2client.id=id
#wso2client.secret=secret

# OAuth- WSO2 Application Properties
#spring.security.oauth2.client.registration.wso2.client-name=WSO2 Identity Server
#spring.security.oauth2.client.registration.wso2.client-id=${wso2client.id}
#spring.security.oauth2.client.registration.wso2.client-secret=${wso2client.secret}
#spring.security.oauth2.client.registration.wso2.redirect-uri=https://localhost:9090/login/oauth2/code/wso2
#spring.security.oauth2.client.registration.wso2.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.wso2.scope=openid
#
#spring.security.oauth2.client.provider.wso2.authorization-uri=${provider.host}/oauth2/authorize
#spring.security.oauth2.client.provider.wso2.token-uri=${provider.host}/oauth2/token
#spring.security.oauth2.client.provider.wso2.user-info-uri=${provider.host}/oauth2/userinfo
#spring.security.oauth2.client.provider.wso2.jwk-set-uri=${provider.host}/oauth2/jwks
#spring.security.oauth2.client.provider.wso2.user-name-attribute=sub
